stages:
  - unit-test
  - Build image
  - Funktionstest
  - Release
  - tag

Build image:
  # Official docker image.
  image: docker:latest
  stage: Build image
  services:
    - docker:dind
  script:
    - docker build -t kandidatapp2 .
    - docker save kandidatapp2 > kandidatapp2.tar
  artifacts:
    paths:
      - kandidatapp2.tar
Test :
  # Official docker image.
  image: docker:latest
  stage: Funktionstest
  services:
    - name: docker:dind
      alias: docker
  script:
    - docker load < kandidatapp2.tar
    - docker run -d -p 80:80 --name kandidatapp2 kandidatapp2
    - sleep 4
    - apk --no-cache add curl
    -  curl http://docker/kandidat-home | grep -i "Logout"

Release:

  image: docker:latest
  stage: Release
  services:
    - name: docker:dind
      alias: docker
  script:
    - docker load < kandidatapp2.tar
    - docker tag kandidatapp2 "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag kandidatapp2 "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

tag:
  only:
    - tags
  image: docker:latest
  stage: tag
  services:
    - name: docker:dind
      alias: docker
  script:
    - docker load < kandidatapp2.tar
    - docker tag kandidatapp2 "${IMAGE_NAME}:${CI_COMMIT_TAG}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_TAG}"





